name: Staging
run-name: ${{ github.actor }} is CI/CD for MoneyPrintTurbo stagingActions üöÄ
on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build and Push
    runs-on: ubuntu-latest
    environment: dev
    outputs:
      tags: ${{ steps.output-id.outputs.v }}

    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }} and base."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - id: output-id
        run: |
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          echo "v=${VERSION}" >> $GITHUB_OUTPUT

      - run: echo "start to setup Docker build"
      - run: echo "TAG_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV   
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to ACR
        uses: aliyun/acr-login@v1
        with:
          login-server: https://registry.cn-beijing.aliyuncs.com
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push image
        run: |
          echo "push env version ${{env.TAG_VERSION}}"
          echo "The defined TAG version:  ${{ VERSION}}"
          docker build -t registry.cn-beijing.aliyuncs.com/chana/moneyprinterturbo:dev-${{VERSION}} .
          docker push registry.cn-beijing.aliyuncs.com/chana/moneyprinterturbo:dev-${{VERSION}}
      - run: echo "üçè This job's status is ${{ job.status }}."

  deploy-staging: 
    name: deploy to staging environment
    environment: dev
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: push image
        run: |
          echo "push version ${{env.TAG_VERSION}} to registry.cn-beijing.aliyuncs.com/chana/moneyprinterturbo:"
          docker build -t registry.cn-beijing.aliyuncs.com/chana/moneyprinterturbo:${{env.TAG_VERSION}} .
          docker push registry.cn-beijing.aliyuncs.com/chana/moneyprinterturbo:dev-${{env.TAG_VERSION}}

      - name: start to deploy to dev environment
        run: echo "Complete."
